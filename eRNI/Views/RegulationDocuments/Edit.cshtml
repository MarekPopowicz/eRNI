@model eRNI.Models.RegulationDocument

@{
    ViewBag.Title = "Edycja dokumentu regulacyjnego";
    List<SelectListItem> items = new List<SelectListItem>();
    items.Add(new SelectListItem { Text = "Akt notarialny", Value = "Akt notarialny", Selected = true });
    items.Add(new SelectListItem { Text = "Zwykła forma pisemna", Value = "Zwykła forma pisemna" });
    items.Add(new SelectListItem { Text = "Decyza administracyjna", Value = "Decyza administracyjna" });
    items.Add(new SelectListItem { Text = "Orzeczenie sądu", Value = "Orzeczenie sądu" });

    string localization = @ViewBag.localization;
    var locality = localization.Replace("/", "_");
    var place = locality.Replace(",", ".");

}

<h3><img src="~/Images/edit.png" height="50" width="50" /> Edycja dokumentu regulacyjnego</h3>

<div class="panel panel-default">
    <div class="panel-heading">
        <a href="@Url.Action("Details", "Regulations", new { id = Model.regulationID })"><span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"></span> Powrót</a>
    </div>
    <div class="panel-body">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
             
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.regulationDocumentID)
                <div class="form-group">
                    @Html.LabelFor(model => model.regulationDocumentType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownList("regulationDocumentType", items, htmlAttributes: new { @class = "form-control", @id = "docType" })
                        @Html.ValidationMessageFor(model => model.regulationDocumentType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.regulationDocumentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.regulationDocumentDate, new { htmlAttributes = new { @class = "form-control datecontrol", @id = "docDate" } })
                        @Html.ValidationMessageFor(model => model.regulationDocumentDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.regulationDocumentSignature, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.regulationDocumentSignature, new { htmlAttributes = new { @class = "form-control", @id = "docSign" } })
                        @Html.ValidationMessageFor(model => model.regulationDocumentSignature, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.regulationDocumentSource, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.regulationDocumentSource, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.regulationDocumentSource, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.regulationDocumentLink, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.regulationDocumentLink, new { htmlAttributes = new { @class = "form-control", @id = "pdfName" } })
                        @Html.ValidationMessageFor(model => model.regulationDocumentLink, "", new { @class = "text-danger" })
                    </div>
                    @Html.DropDownList("regulationID", null, htmlAttributes: new { @class = "form-control hidden" })
                </div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.additionalInformation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.additionalInformation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.additionalInformation, "", new { @class = "text-danger" })
                    </div>
                </div>
                

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Zapisz" class="btn btn-primary btn-lg" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

    

var projectId = " (@ViewBag.projectID) " + "@ViewBag.sapNo " + "@place";

    function pdfName() {
        var sign = $('#docSign').val().replace("/", "_");
        var id = ($('#docDate').val()) + " " + sign + projectId;
        $('#pdfName').val(id);
    };

    $(document).on('change', '#docType', function () {
        if ($('#docType').val() == "Akt notarialny") {
            $('#docSign').val("Rep. A. ");
        } else {
            $('#docSign').val("");
        };
        pdfName();
    });

    $(document).on('change', '#docDate', function () {
       pdfName();
    });

    $(document).on('change', '#docSign', function () {
        pdfName();
    });
</script>
}
