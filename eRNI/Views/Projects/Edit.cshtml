@model eRNI.Models.Project

@{
    ViewBag.Title = "Edycja projektu";
}

<h3><img src="~/Images/edit.png" height="50" width="50" /> Edycja projektu <span style="color:#b200ff; font-weight:bold">(@Html.DisplayFor(model => model.projectID))</span> <span style="color:#ff006e; font-weight:bold">@Html.DisplayFor(modelItem => Model.projectSapNo)</span></h3>

<div class="panel panel-default">
    <div class="panel-heading"> 
        <a href="@Url.Action("Details", new { id = Model.projectID })"><span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"></span> Powrót</a>
    </div>
        <div class="panel-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
 
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.projectID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.projectInflow, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.projectInflow, new { htmlAttributes = new { @class = "form-control datecontrol" } })
                            @Html.ValidationMessageFor(model => model.projectInflow, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.projectSapNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.projectSapNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.projectSapNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.projectTask, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.projectTask, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               @cols = 10,
                               @rows = 2
                           }
                       })
                            @Html.ValidationMessageFor(model => model.projectTask, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.projectStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EnumDropDownListFor(model => model.projectStatus, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.projectStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.projectLeader, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.projectLeader, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.projectLeader, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.projectManager, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.projectManager, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.projectManager, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.projectPriority, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.projectPriority)
                                @Html.ValidationMessageFor(model => model.projectPriority, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.projectCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.DropDownList("projectCategoryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.projectCategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        @Html.LabelFor(model => model.projectAdditionalInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.projectAdditionalInfo, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               @cols = 10,
                               @rows = 5
                           }
                       })
                            @Html.ValidationMessageFor(model => model.projectAdditionalInfo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Zapisz" class="btn btn-primary btn-lg" />
                        </div>
                    </div>
                </div>
            }


        </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
