@model eRNI.Models.PropertyDocument

@{
    ViewBag.Title = "Nowy dokument OT/PT";

    List<SelectListItem> items = new List<SelectListItem>();
    items.Add(new SelectListItem { Text = "OT", Value = "OT", Selected = true });
    items.Add(new SelectListItem { Text = "PT", Value = "PT" });
}

<h3><img src="~/Images/add.png" height="50" width="50" /> Nowy dokument OT/PT</h3>

<div class="panel panel-default">
    <div class="panel-heading">
        <a href="@Url.Action("Details", "Projects", new { id = (int)Session["projectID"] })"><span class="glyphicon glyphicon-circle-arrow-left" aria-hidden="true"></span> Powrót</a>
    </div>

    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.projectID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownList("projectID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.projectID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.propertyDocumentType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-1">
                        @Html.DropDownList("propertyDocumentType", items, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.propertyDocumentType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.propertyDocumentSapRegisterNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.propertyDocumentSapRegisterNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.propertyDocumentSapRegisterNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.propertyDocumentSapRegistrationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.propertyDocumentSapRegistrationDate, new { htmlAttributes = new { @class = "form-control datecontrol" } })
                        @Html.ValidationMessageFor(model => model.propertyDocumentSapRegistrationDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.propertyDocumentAdditionalInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.propertyDocumentAdditionalInfo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.propertyDocumentAdditionalInfo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Zapisz" class="btn btn-primary btn-lg" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
